syntax = "proto3";

package users;

import "general.proto";

/*
* Messages used to handle requests
* to the user endpoint
*/



// Message used to store the user data 
// in the statefun and also what we give back to the
// queries
message UserData{
    uint64 id = 1;
    int64 credit = 2;
}

// Message used to keep track of the current max
// id to be assigned
message Count{
    uint64 num = 1;
}

// USER CREATION MESSAGES

message CreateUserRequest{
    string request_id = 1;
    string worker_id = 2;
}


// internal to be used by the statefun
// between the create_user and the user function
message CreateUserWithId{
    uint64 id = 1;
    string request_id = 2;
    string worker_id = 3;
}


// Message containing the others
message UserRequest{

    // GET USER MESSAGE
    message FindUserRequest{
    uint64 id = 1;
}

    // USER DELETION MESSAGES
    message RemoveUserRequest{
        uint64 id = 1;
    }

    // SUBTRACT CREDIT MESSAGES
    message SubtractCreditRequest{
        uint64 id = 1;
        int64 amount =2;
    }

    // ADD CREDIT MESSAGES
    message AddCreditRequest{
        uint64 id = 1;
        int64 amount = 2;
    }

    // Request id for identifying the request
    // in the endpoint and answer
    string request_id = 1;

    // Worker id used as key of the response 
    // so a given worker just has to save its
    // own messages
    string worker_id = 2;

    oneof message {
        FindUserRequest find_user = 3;
        RemoveUserRequest remove_user = 4;
        SubtractCreditRequest subtract_credit = 5;
        AddCreditRequest add_credit = 6;
    }

}


// INTERACTION WITH THE PAYMENT SERVICE 

message UserPayRequest{
    int64 amount = 1;

    // Include the request info
    RequestInfo request_info = 2;
}

// Message to cancel the payment
message UserCancelPayRequest{
    int64 amount = 1;

    RequestInfo request_info = 2;
}

// Response returned to the payment 
// service with success or failure
message UserPayResponse{
    bool success = 1;
    RequestInfo request_info = 2;
}