version: "1.0"
module:
  meta:
    type: remote
  spec:
    functions:
      - function:
          meta:
            kind: http
            type: users/create
          spec:
            endpoint: http://users-endpoint:8000/statefun
            states:
              - count
            maxNumBatchRequests: 500
            timeout: 2min
      - function:
          meta:
            kind: http
            type: users/user
          spec:
            endpoint: http://users-endpoint:8000/statefun
            states:
              - user
            maxNumBatchRequests: 500
            timeout: 2min

      - function:
          meta:
            kind: http
            type: orders/create
          spec:
            endpoint: http://orders-endpoint:8001/statefun
            states:
              - count
            maxNumBatchRequests: 500
            timeout: 2min

      - function:
          meta:
            kind: http
            type: orders/order
          spec:
            endpoint: http://orders-endpoint:8001/statefun
            states:
              - order
            maxNumBatchRequests: 500
            timeout: 2min
      - function:
          meta:
            kind: http
            type: stock/create
          spec:
            endpoint: http://stock-endpoint:8002/statefun
            states:
              - count
            maxNumBatchRequests: 500
            timeout: 2min
      - function:
          meta:
            kind: http
            type: stock/stock
          spec:
            endpoint: http://stock-endpoint:8002/statefun
            states:
              - item
            maxNumBatchRequests: 500
            timeout: 2min

      - function:
          meta:
            kind: http
            type: payments/pay
          spec:
            endpoint: http://payments-endpoint:8003/statefun
            maxNumBatchRequests: 500
            timeout: 2min


    ingresses:
      - ingress:
          meta:
            type: statefun.kafka.io/routable-protobuf-ingress
            id: api-endpoint/in
          spec:
            address: pkc-4yyd6.us-east1.gcp.confluent.cloud:9092
            consumerGroupId: my-group-id
            topics:
              - topic: users-create
                typeUrl: com.googleapis/users.CreateUserRequest
                targets:
                  - users/create
              - topic: users
                typeUrl: com.googleapis/users.UserRequest
                targets:
                  - users/user
              - topic: orders-create
                typeUrl: com.googleapis/orders.CreateOrder
                targets:
                  - orders/create
              - topic: orders
                typeUrl: com.googleapis/orders.OrderRequest
                targets:
                  - orders/order
              - topic: stock-create
                typeUrl: com.googleapis/stock.CreateItemRequest
                targets:
                  - stock/create
              - topic: stock
                typeUrl: com.googleapis/stock.StockRequest
                targets:
                  - stock/stock
            properties:
              - sasl.mechanism: PLAIN
              - security.protocol: SASL_SSL
              - sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="{KEY}" password="{SECRET}";
              - ssl.endpoint.identification.algorithm: https

    egresses:
      - egress:
          meta:
            type: statefun.kafka.io/generic-egress
            id: users/out
          spec:
            address: pkc-4yyd6.us-east1.gcp.confluent.cloud:9092
            deliverySemantic:
              type: exactly-once
              transactionTimeoutMillis: 100000
            properties:
              - sasl.mechanism: PLAIN
              - security.protocol: SASL_SSL
              - sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="LY2VYNFHF2JQGVYV" password="{SECRET}";
              - ssl.endpoint.identification.algorithm: https

      - egress:
          meta:
            type: statefun.kafka.io/generic-egress
            id: orders/out
          spec:
            address: pkc-4yyd6.us-east1.gcp.confluent.cloud:9092
            deliverySemantic:
              type: exactly-once
              transactionTimeoutMillis: 100000
            properties:
              - sasl.mechanism: PLAIN
              - security.protocol: SASL_SSL
              - sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="{KEY}" password="{SECRET}";
              - ssl.endpoint.identification.algorithm: https

      - egress:
          meta:
            type: statefun.kafka.io/generic-egress
            id: stock/out
          spec:
            address: pkc-4yyd6.us-east1.gcp.confluent.cloud:9092
            deliverySemantic:
              type: exactly-once
              transactionTimeoutMillis: 100000
            properties:
              - sasl.mechanism: PLAIN
              - security.protocol: SASL_SSL
              - sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="{KEY}" password="{SECRET}";
              - ssl.endpoint.identification.algorithm: https

      - egress:
          meta:
            type: statefun.kafka.io/generic-egress
            id: payments/out
          spec:
            address: pkc-4yyd6.us-east1.gcp.confluent.cloud:9092
            deliverySemantic:
              type: exactly-once
              transactionTimeoutMillis: 100000
            properties:
              - sasl.mechanism: PLAIN
              - security.protocol: SASL_SSL
              - sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="{KEY}" password="{SECRET}";
              - ssl.endpoint.identification.algorithm: https
